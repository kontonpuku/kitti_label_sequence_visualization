cmake_minimum_required(VERSION 2.8.3)
project(viz_kitti)







##################
## Dependencies ##
##################

find_package(catkin REQUIRED COMPONENTS roscpp cv_bridge)
catkin_package()
include_directories(include ${catkin_INCLUDE_DIRS})
link_directories(${catkin_LIBRARY_DIRS})


#find_package(Boost REQUIRED) 

if(Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})  
endif()


find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR}/src/)
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})


#find_package(cv_bridge REQUIRED)
#message( STATUS "cv_bridge Include Dir: " ${cv_bridge_INCLUDE_DIRS}   "  " ${cv_bridge_LIBRARY_DIRS})  
#include_directories(${cv_bridge_INCLUDE_DIRS})
#link_directories(${cv_bridge_LIBRARY_DIRS})


find_package(OpenCV  REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})
link_directories(${OpenCV_LIBRARY_DIRS})
message( STATUS "OpenCV Include Dir: " ${OpenCV_INCLUDE_DIRS} )


get_property(dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)
foreach(dir ${dirs})
  message(STATUS "dir='${dir}'")
endforeach()


###########
## Build ##
###########


add_executable(kitti_viz_node src/main.cpp src/cal.hpp)
target_link_libraries(kitti_viz_node ${catkin_LIBRARIES} ${PCL_LIBRARIES} ${Boost_LIBRARIES} ${OpenCV_LIBRARIES})


add_executable(re_test src/re_test.cpp)
target_link_libraries(re_test ${catkin_LIBRARIES} ${PCL_LIBRARIES} ${Boost_LIBRARIES} ${OpenCV_LIBRARIES})




#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_viz_kitti.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
